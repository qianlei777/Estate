<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kgc.estate.dao.EstateMapper">
    <resultMap id="BaseResultMap" type="com.kgc.estate.pojo.Estate">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="uid" property="uid" jdbcType="VARCHAR"/>
        <result column="projectName" property="projectname" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="houseType" property="housetype" jdbcType="VARCHAR"/>
        <result column="area" property="area" jdbcType="INTEGER"/>
        <result column="buildTime" property="buildtime" jdbcType="DATE"/>
        <association property="user" column="uid"
                     select="com.kgc.estate.dao.UserMapper.selectByPrimaryKey"></association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, uid, projectName, address, houseType, area, buildTime
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kgc.estate.pojo.EstateExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from estate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from estate
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from estate
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.kgc.estate.pojo.EstateExample">
        delete from estate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.kgc.estate.pojo.Estate">
    insert into estate (id, uid, projectName, 
      address, houseType, area, 
      buildTime)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=VARCHAR}, #{projectname,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{housetype,jdbcType=VARCHAR}, #{area,jdbcType=INTEGER}, 
      #{buildtime,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" parameterType="com.kgc.estate.pojo.Estate">
        insert into estate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="projectname != null">
                projectName,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="housetype != null">
                houseType,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="buildtime != null">
                buildTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="projectname != null">
                #{projectname,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="housetype != null">
                #{housetype,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=INTEGER},
            </if>
            <if test="buildtime != null">
                #{buildtime,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.kgc.estate.pojo.EstateExample" resultType="java.lang.Integer">
        select count(*) from estate
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update estate
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=VARCHAR},
            </if>
            <if test="record.projectname != null">
                projectName = #{record.projectname,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.housetype != null">
                houseType = #{record.housetype,jdbcType=VARCHAR},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=INTEGER},
            </if>
            <if test="record.buildtime != null">
                buildTime = #{record.buildtime,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update estate
        set id = #{record.id,jdbcType=BIGINT},
        uid = #{record.uid,jdbcType=VARCHAR},
        projectName = #{record.projectname,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        houseType = #{record.housetype,jdbcType=VARCHAR},
        area = #{record.area,jdbcType=INTEGER},
        buildTime = #{record.buildtime,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.kgc.estate.pojo.Estate">
        update estate
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="projectname != null">
                projectName = #{projectname,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="housetype != null">
                houseType = #{housetype,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=INTEGER},
            </if>
            <if test="buildtime != null">
                buildTime = #{buildtime,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kgc.estate.pojo.Estate">
    update estate
    set uid = #{uid,jdbcType=VARCHAR},
      projectName = #{projectname,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      houseType = #{housetype,jdbcType=VARCHAR},
      area = #{area,jdbcType=INTEGER},
      buildTime = #{buildtime,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>